{"version":3,"sources":["doTA.Router.js"],"names":["window","angular","undefined","forEachArray","arr","fn","context","forEach","i","l","length","call","forEachObject","obj","iter","x","inherit","parent","extra","extend","prototype","$doTARouteProvider","this","route","path","paths","push","$get","$rootScope","$location","$routeParams","$q","$injector","$http","$templateCache","$compile","$controller","$filter","doTA","updateRoute","next","parseRoute","last","$route","current","$$route","equals","pathParams","reloadOnSearch","forceReload","params","cleanCopy","$broadcast","redirectTo","isString","search","replace","url","when","then","template","templateUrl","locals","resolve","value","key","preloaded","server","get","invoke","isDefined","isFunction","loadedTemplateUrl","C","cache","response","data","$template","all","attrDoTARender","$scope","$destroy","$new","controller","controllerAs","$doTAView","children","$emit","options","debug","encode","optimize","loose","event","copy","compiledFn","compile","uniqueId","id","U","loaded","rawElem","innerHTML","compileAll","contentDocument","childNodes","querySelectorAll","partial","scope","model","addNgModels","addEvents","error","$$location","$$rootScope","reload","$evalAsync","$on","$RouteParamsProvider","$RoutesProvider","update","location","pathname","href","src","dst","merge","arguments","match","rootParams","locator","switchRegexRouteMatcher","abstract","routes","callback","matched","r","regexp","test","m","exec","names","len","val","prefix","run","document","querySelector","element","attr","removeAttr","doTARouteModule","module","provider","directive","terminal","priority"],"mappings":"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","file":"doTA.Router.min.js","sourcesContent":["(function(window, angular, undefined) {'use strict';\n\tvar $scope, $doTAView, rawElem, loaded, preloaded; //, compileSelector;\n\tif (document.querySelector){\n\t\trawElem = document.querySelector('[dota-view]')\n\t\t$doTAView = angular.element(rawElem);\n\t\tloaded = $doTAView.attr('loaded');\n\t\tpreloaded = loaded === location.pathname;\n\t\tif (loaded) {\n\t\t\t$doTAView.removeAttr('loaded');\n\t\t}\n\t}\n\tfunction forEachArray(arr, fn, context) {\n\t\tif (!arr) { return; }\n\t\tif (arr.forEach) {\n\t\t\treturn arr.forEach(fn);\n\t\t}\n\t\tfor (var i = 0, l = arr.length; i < l; i++) {\n\t\t\tfn.call(context, arr[i], i);\n\t\t}\n\t}\n\tfunction forEachObject(obj, iter) {\n\t\tif (!obj) { return; }\n\t\tfor (var x in obj) {\n\t\t\tif (x in obj) {\n\t\t\t\titer(obj[x], x);\n\t\t\t}\n\t\t}\n\t}\n\tfunction inherit(parent, extra) {\n\t\treturn angular.extend(new (angular.extend(function() {}, {prototype:parent}))(), extra);\n\t}\n\tvar $$location, $$rootScope;\n\tvar paths = [], $route = {}, forceReload = false;\n\tvar doTARouteModule = angular.module('doTA.Router', ['ng', 'doTA']).\n\t\tprovider('$route', $doTARouteProvider);\n\tfunction $doTARouteProvider(){\n\t\tthis.route = function(path, route) {\n\t\t\tpaths.push([path, route]);\n\t\t\treturn this;\n\t\t};\n\t\tthis.$get = ['$rootScope',\n\t\t\t'$location',\n\t\t\t'$routeParams',\n\t\t\t'$q',\n\t\t\t'$injector',\n\t\t\t'$http',\n\t\t\t'$templateCache',\n\t\t\t'$compile',\n\t\t\t'$controller',\n\t\t\t'$filter',\n\t\t\t'doTA',\n\t\t\tfunction($rootScope, $location, $routeParams, $q, $injector,\n\t\t\t\t$http, $templateCache, $compile, $controller, $filter, doTA) {\n\t\t\t\t$$location = $location;\n\t\t\t\t$$rootScope = $rootScope;\n\t\t\t\t$route.reload = function() {\n\t\t\t\t\tforceReload = true;\n\t\t\t\t\t$rootScope.$evalAsync(updateRoute);\n\t\t\t\t};\n\t\t\t\t$rootScope.$on('$locationChangeSuccess', updateRoute);\n\t\t\t\treturn $route;\n\t\t\t\tfunction updateRoute() {\n\t\t\t\t\tvar next = parseRoute(),\n\t\t\t\t\t\tlast = $route.current;\n\t\t\t\t\tif (next && last && next.$$route === last.$$route\n\t\t\t\t\t\t&& angular.equals(next.pathParams, last.pathParams)\n\t\t\t\t\t\t&& !next.reloadOnSearch && !forceReload) {\n\t\t\t\t\t\tlast.params = next.params;\n\t\t\t\t\t\tcleanCopy(last.params, $routeParams);\n\t\t\t\t\t\t$rootScope.$broadcast('$routeUpdate', last);\n\t\t\t\t\t} else if (next || last) {\n\t\t\t\t\t\tforceReload = false;\n\t\t\t\t\t\t$rootScope.$broadcast('$routeChangeStart', next, last);\n\t\t\t\t\t\t$route.current = next;\n\t\t\t\t\t\tif (next) {\n\t\t\t\t\t\t\tif (next.redirectTo) {\n\t\t\t\t\t\t\t\tif (angular.isString(next.redirectTo)) {\n\t\t\t\t\t\t\t\t\t$location.path(next.redirectTo).search(next.params)\n\t\t\t\t\t\t\t\t\t\t.replace();\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$location.url(next.redirectTo(next.pathParams, $location.path(), $location.search()))\n\t\t\t\t\t\t\t\t\t\t.replace();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$q.when(next).\n\t\t\t\t\t\t\tthen(function() {\n\t\t\t\t\t\t\t\tif (next) {\n\t\t\t\t\t\t\t\t\tvar locals = angular.extend({}, next.resolve),\n\t\t\t\t\t\t\t\t\t\ttemplate, templateUrl;\n\t\t\t\t\t\t\t\t\tforEachObject(locals, function(value, key) {\n\t\t\t\t\t\t\t\t\t\tif (preloaded && next.server) {\n\t\t\t\t\t\t\t\t\t\t\tif (next.server === true || next.server[key] === true) {\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('server only rendered resolve', key, next.server);\n\t\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tlocals[key] = angular.isString(value) ?\n\t\t\t\t\t\t\t\t\t\t\t$injector.get(value) : $injector.invoke(value);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tif (angular.isDefined(template = next.template)) {\n\t\t\t\t\t\t\t\t\t\tif (angular.isFunction(template)) {\n\t\t\t\t\t\t\t\t\t\t\ttemplate = template(next.params);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else if (angular.isDefined(templateUrl = next.templateUrl)) {\n\t\t\t\t\t\t\t\t\t\tif (angular.isFunction(templateUrl)) {\n\t\t\t\t\t\t\t\t\t\t\ttemplateUrl = templateUrl(next.params);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (angular.isDefined(templateUrl)) {\n\t\t\t\t\t\t\t\t\t\t\tnext.loadedTemplateUrl = templateUrl;\n\t\t\t\t\t\t\t\t\t\t\tif (!doTA.C[templateUrl]) {\n\t\t\t\t\t\t\t\t\t\t\t\ttemplate = $http.get(templateUrl, {cache: $templateCache}).\n\t\t\t\t\t\t\t\t\t\t\t\t\tthen(function(response) { return response.data; });\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (angular.isDefined(template)) {\n\t\t\t\t\t\t\t\t\t\tlocals.$template = template;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn $q.all(locals);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}).\n\t\t\t\t\t\t\tthen(function(locals) {\n\t\t\t\t\t\t\t\tif (next === $route.current) {\n\t\t\t\t\t\t\t\t\tif (next) {\n\t\t\t\t\t\t\t\t\t\tif (!next.$$route) {\n\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tnext.locals = locals;\n\t\t\t\t\t\t\t\t\t\tcleanCopy(next.params, $routeParams);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t$rootScope.$broadcast('$routeChangeSuccess', next, last);\n\t\t\t\t\t\t\t\t\tvar current = next.$$route;\n\t\t\t\t\t\t\t\t\tvar attrDoTARender = current.templateUrl;\n\t\t\t\t\t\t\t\t\tif($scope) {\n\t\t\t\t\t\t\t\t\t\t$scope.$destroy();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t$scope = $rootScope.$new();\n\t\t\t\t\t\t\t\t\tlocals.$scope = $scope;\n\t\t\t\t\t\t\t\t\tif (current.controller) {\n\t\t\t\t\t\t\t\t\t\tvar controller = $controller(current.controller, locals);\n\t\t\t\t\t\t\t\t\t\tif (current.controllerAs) {\n\t\t\t\t\t\t\t\t\t\t\t$scope[current.controllerAs] = controller;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t$doTAView.data('$ngControllerController', controller);\n\t\t\t\t\t\t\t\t\t\t$doTAView.children().data('$ngControllerController', controller);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (!attrDoTARender) {\n\t\t\t\t\t\t\t\t\t\treturn $scope.$emit('$viewContentLoaded');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tvar options = {\n\t\t\t\t\t\t\t\t\t\tdebug: 0, encode: 0, optimize: 1, loose: 1, event: 1\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tif (typeof current.options === 'object') {\n\t\t\t\t\t\t\t\t\t\tcopy(current.options, options);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tvar compiledFn;\n\t\t\t\t\t\t\t\t\tif (doTA.C[attrDoTARender]) {\n\t\t\t\t\t\t\t\t\t\tcompiledFn = doTA.C[attrDoTARender];\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tcompiledFn = doTA.C[attrDoTARender] = doTA.compile(locals.$template, options);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tvar uniqueId = compiledFn.id || doTA.U[attrDoTARender];\n\t\t\t\t\t\t\t\t\tif (loaded && preloaded) {\n\t\t\t\t\t\t\t\t\t\tpreloaded = loaded = false;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\trawElem.innerHTML = compiledFn($scope, $filter);\n\t\t\t\t\t\t\t\t\t\tif (loaded) {\n\t\t\t\t\t\t\t\t\t\t\tloaded = false;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (options.compileAll || options.compileAll === undefined) {\n\t\t\t\t\t\t\t\t\t\tconsole.time('$compile');\n\t\t\t\t\t\t\t\t\t\t$compile(rawElem.contentDocument || rawElem.childNodes)($scope);\n\t\t\t\t\t\t\t\t\t\tconsole.timeEnd('$compile');\n\t\t\t\t\t\t\t\t\t} else if (options.compile) {\n\t\t\t\t\t\t\t\t\t\tconsole.time('$compile dota-pass:' + attrDoTARender);\n\t\t\t\t\t\t\t\t\t\tforEachArray(rawElem.querySelectorAll('[dota-pass]'), function(partial){\n\t\t\t\t\t\t\t\t\t\t\t$compile(partial)(scope);\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tconsole.timeEnd('$compile dota-pass:' + attrDoTARender);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (options.model) {\n\t\t\t\t\t\t\t\t\t\tdoTA.addNgModels(rawElem, $scope, uniqueId);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (options.event) {\n\t\t\t\t\t\t\t\t\t\tdoTA.addEvents(rawElem, $scope, options.event, uniqueId);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t$scope.$emit('$viewContentLoaded');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, function(error) {\n\t\t\t\t\t\t\t\tconsole.error('route error', error);\n\t\t\t\t\t\t\t\tif (next === $route.current) {\n\t\t\t\t\t\t\t\t\t$rootScope.$broadcast('$routeChangeError', next, last, error);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}];\n\t}\n\tdoTARouteModule.provider('$routeParams', $RouteParamsProvider);\n\tfunction $RouteParamsProvider() {\n\t\tthis.$get = function() { return {}; };\n\t}\n\tdoTARouteModule.provider('Router', $RoutesProvider);\n\tfunction $RoutesProvider() {\n\t\tthis.$get = ['$location', '$rootScope', '$routeParams', function($location, $rootScope, $routeParams) {\n\t\t\t$$location = $location;\n\t\t\t$$rootScope = $rootScope;\n\t\t\treturn {\n\t\t\t\tupdate: function(path) {\n\t\t\t\t\twindow.location.pathname = window.location.href = path;\n\t\t\t\t\tvar next = $route.current = parseRoute();\n\t\t\t\t\tcleanCopy(next.params, $routeParams);\n\t\t\t\t\treturn next;\n\t\t\t\t}\n\t\t\t};\n\t\t}];\n\t}\n\tdoTARouteModule.directive('dotaView', function(){\n\t\treturn {\n\t\t\tterminal: true,\n\t\t\tpriority: 10000\n\t\t};\n\t});\n\tfunction cleanCopy(src, dst) {\n\t\tfor (var x in dst) {\n\t\t\tdelete dst[x];\n\t\t}\n\t\tcopy(src, dst);\n\t}\n\tfunction copy(src, dst) {\n\t\tfor (var x in src) {\n\t\t\tdst[x] = src[x];\n\t\t}\n\t}\n\tfunction merge(dst) {\n\t\tfor (var i = 1, l = arguments.length; i < l ; i++) {\n\t\t\tcopy(arguments[i], dst);\n\t\t}\n\t\treturn dst;\n\t}\n\tfunction parseRoute() {\n\t\tvar params, match, rootParams;\n\t\tvar locator = {path: $$location.path(), search: $$location.search()};\n\t\tforEachArray(paths, function(path) {\n\t\t\tvar route = path[1];\n\t\t\tif (!match && (params = switchRegexRouteMatcher(locator, path[0], path[1]))\n\t\t\t) {\n\t\t\t\tif(route.abstract) {\n\t\t\t\t\trootParams = merge({}, locator.search, params);\n\t\t\t\t} else {\n\t\t\t\t\tmatch = inherit(route, {\n\t\t\t\t\t\tparams: merge({}, locator.search, params, rootParams),\n\t\t\t\t\t\tpathParams: params\n\t\t\t\t\t});\n\t\t\t\t\tmatch.$$route = route;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn match || merge({redirectTo: '/'}, {params: {}, pathParams:{}});\n\t}\n\tfunction switchRegexRouteMatcher(locator, routes, callback) {\n\t\tvar params = {}, matched;\n\t\tif(!routes) { return; }\n\t\tfor (var r=0; r<routes.length; r++) {\n\t\t\tvar route = routes[r];\n\t\t\tif (!route.regexp || !route.regexp.test(locator.path)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tmatched = true;\n\t\t\tvar m = route.regexp.exec(locator.path);\n\t\t\tif(route.names) {\n\t\t\t\tfor (var i = 1, len = m.length; i < len; ++i) {\n\t\t\t\t\tvar key = route.names[i - 1];\n\t\t\t\t\tvar val = m[i];\n\t\t\t\t\tif (key) {\n\t\t\t\t\t\tparams[key] = val || '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(route.prefix) {\n\t\t\t\tlocator.path = locator.path.replace(route.regexp, '') || '/';\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(callback.run && params) {\n\t\t\tcallback.run($$rootScope, merge(params, locator.search));\n\t\t}\n\t\tif (matched) {\n\t\t\treturn params;\n\t\t}\n\t}\n})(window, window.angular);\n"],"sourceRoot":"/source/"}